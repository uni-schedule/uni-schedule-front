{
  "swagger": "2.0",
  "info": {
    "description": "This is an API for Uni Schedule App.",
    "title": "Uni Schedule API",
    "contact": {},
    "version": "0.1"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Get access and refresh token pair by username and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Login",
        "operationId": "auth-login",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handler.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.AuthResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Generate a new access and refresh token pair using the refresh token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Refresh Tokens",
        "operationId": "auth-refresh",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handler.RefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.AuthResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Create an account and get access and refresh token pair",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "summary": "Register",
        "operationId": "auth-register",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handler.RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.AuthResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/classes": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create Class",
        "produces": ["application/json"],
        "tags": ["Class"],
        "summary": "Create Class",
        "operationId": "classes-create",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.CreateClassDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/classes/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get Class  By ID",
        "produces": ["application/json"],
        "tags": ["Class"],
        "summary": "Get Class By ID",
        "operationId": "classes-get-by-id",
        "parameters": [
          {
            "type": "integer",
            "description": "Class ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domain.Class"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete Class",
        "produces": ["application/json"],
        "tags": ["Class"],
        "summary": "Delete Class",
        "operationId": "classes-delete",
        "parameters": [
          {
            "type": "integer",
            "description": "Class ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update Class",
        "produces": ["application/json"],
        "tags": ["Class"],
        "summary": "Update Class",
        "operationId": "classes-update",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.UpdateClassDTO"
            }
          },
          {
            "type": "integer",
            "description": "Class ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Schedule"],
        "summary": "Create Schedule",
        "operationId": "schedule-create",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handler.CreateScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/my": {
      "get": {
        "description": "Get Current User Schedules",
        "produces": ["application/json"],
        "tags": ["Schedule"],
        "summary": "Get Current User Schedules",
        "operationId": "schedule-get-my",
        "parameters": [
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Offset",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.GetMySchedulesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/slug/{slug}": {
      "get": {
        "description": "Get schedule using slug",
        "produces": ["application/json"],
        "tags": ["Schedule"],
        "summary": "Get Schedule By Slug",
        "operationId": "schedule-get-slug",
        "parameters": [
          {
            "type": "string",
            "description": "Schedule Slug",
            "name": "slug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domain.ScheduleView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{id}": {
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete schedule",
        "produces": ["application/json"],
        "tags": ["Schedule"],
        "summary": "Delete Schedule",
        "operationId": "schedule-delete",
        "parameters": [
          {
            "type": "integer",
            "description": "Schedule ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Schedule"],
        "summary": "Update Schedule",
        "operationId": "schedule-update",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handler.UpdateScheduleRequest"
            }
          },
          {
            "type": "integer",
            "description": "Schedule ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/subjects": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get Schedule's Subjects",
        "produces": ["application/json"],
        "tags": ["Subjects"],
        "summary": "Get Schedule's Subjects",
        "operationId": "subjects-get-all-schedule",
        "parameters": [
          {
            "type": "integer",
            "description": "Schedule ID",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Offset",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.GetSubjectsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/teachers": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get Schedule's Teachers",
        "produces": ["application/json"],
        "tags": ["Teacher"],
        "summary": "Get Schedule's Teachers",
        "operationId": "teacher-get-all",
        "parameters": [
          {
            "type": "integer",
            "description": "Schedule ID",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Offset",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.GetTeahersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/subjects": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create Subject",
        "produces": ["application/json"],
        "tags": ["Subjects"],
        "summary": "Create Subject",
        "operationId": "subjects-create",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.CreateSubjectDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/subjects/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get Subject by ID",
        "produces": ["application/json"],
        "tags": ["Subjects"],
        "summary": "Get Subject by ID",
        "operationId": "subjects-get-by-id",
        "parameters": [
          {
            "type": "integer",
            "description": "Subject ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domain.Subject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete Subject",
        "produces": ["application/json"],
        "tags": ["Subjects"],
        "summary": "Delete Subject",
        "operationId": "subjects-delete",
        "parameters": [
          {
            "type": "integer",
            "description": "Subject ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update Subject",
        "produces": ["application/json"],
        "tags": ["Subjects"],
        "summary": "Update Subject",
        "operationId": "subjects-update",
        "parameters": [
          {
            "type": "integer",
            "description": "Subject ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.UpdateSubjectDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/teachers": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create a new teacher",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Teacher"],
        "summary": "Create Teacher",
        "operationId": "teacher-create",
        "parameters": [
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.TeacherCreateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    },
    "/teachers/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get Schedule's Teacher",
        "produces": ["application/json"],
        "tags": ["Teacher"],
        "summary": "Get Schedule's Teacher",
        "operationId": "teacher-get-id",
        "parameters": [
          {
            "type": "integer",
            "description": "Teacher ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domain.Teacher"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete teacher",
        "produces": ["application/json"],
        "tags": ["Teacher"],
        "summary": "Delete Teacher",
        "operationId": "teacher-delete",
        "parameters": [
          {
            "type": "integer",
            "description": "Teacher ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update teacher",
        "produces": ["application/json"],
        "tags": ["Teacher"],
        "summary": "Update Teacher",
        "operationId": "teacher-update",
        "parameters": [
          {
            "type": "integer",
            "description": "Teacher ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domain.TeacherUpdateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/handler.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/handler.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "domain.Class": {
      "type": "object",
      "required": [
        "class_type",
        "day_of_week",
        "even_week",
        "id",
        "number",
        "schedule_id",
        "subject_id",
        "teacher_id"
      ],
      "properties": {
        "class_type": {
          "$ref": "#/definitions/domain.ClassType"
        },
        "day_of_week": {
          "$ref": "#/definitions/domain.Day"
        },
        "even_week": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "schedule_id": {
          "type": "integer"
        },
        "subject_id": {
          "type": "integer"
        },
        "teacher_id": {
          "type": "integer"
        }
      }
    },
    "domain.ClassType": {
      "type": "string",
      "enum": ["lecture", "practice", "lab", "combined"],
      "x-enum-varnames": [
        "ClassTypeLecture",
        "ClassTypePractice",
        "ClassTypeLab",
        "ClassTypeCombined"
      ]
    },
    "domain.ClassView": {
      "type": "object",
      "required": [
        "class_type",
        "day_of_week",
        "even_week",
        "id",
        "number",
        "subject",
        "teacher"
      ],
      "properties": {
        "class_type": {
          "$ref": "#/definitions/domain.ClassType"
        },
        "day_of_week": {
          "$ref": "#/definitions/domain.Day"
        },
        "even_week": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "subject": {
          "$ref": "#/definitions/domain.SubjectView"
        },
        "teacher": {
          "$ref": "#/definitions/domain.TeacherView"
        }
      }
    },
    "domain.CreateClassDTO": {
      "type": "object",
      "required": [
        "class_type",
        "day_of_week",
        "even_week",
        "number",
        "schedule_id",
        "subject_id",
        "teacher_id"
      ],
      "properties": {
        "class_type": {
          "$ref": "#/definitions/domain.ClassType"
        },
        "day_of_week": {
          "$ref": "#/definitions/domain.Day"
        },
        "even_week": {
          "type": "boolean"
        },
        "number": {
          "type": "integer"
        },
        "schedule_id": {
          "type": "integer"
        },
        "subject_id": {
          "type": "integer"
        },
        "teacher_id": {
          "type": "integer"
        }
      }
    },
    "domain.CreateSubjectDTO": {
      "type": "object",
      "required": ["name", "schedule_id"],
      "properties": {
        "name": {
          "type": "string"
        },
        "schedule_id": {
          "type": "integer"
        }
      }
    },
    "domain.Day": {
      "type": "string",
      "enum": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "x-enum-varnames": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "domain.DayGroupedClassesView": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/domain.NumberGroupedClassesView"
      }
    },
    "domain.NumberGroupedClassesView": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/domain.ClassView"
        }
      }
    },
    "domain.Pagination": {
      "type": "object",
      "required": ["limit", "offest", "pages", "total"],
      "properties": {
        "limit": {
          "type": "integer"
        },
        "offest": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "domain.Schedule": {
      "type": "object",
      "required": ["created_at", "id", "slug", "title", "user_id"],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "domain.ScheduleView": {
      "type": "object",
      "required": ["entries", "id", "slug", "title", "user_id"],
      "properties": {
        "entries": {
          "$ref": "#/definitions/domain.DayGroupedClassesView"
        },
        "id": {
          "type": "integer"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "domain.Subject": {
      "type": "object",
      "required": ["id", "name", "schedule_id"],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "schedule_id": {
          "type": "integer"
        }
      }
    },
    "domain.SubjectView": {
      "type": "object",
      "required": ["id", "name"],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "domain.Teacher": {
      "type": "object",
      "required": ["first_name", "id", "last_name", "schedule_id", "surname"],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "last_name": {
          "type": "string"
        },
        "schedule_id": {
          "type": "integer"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "domain.TeacherCreateDTO": {
      "type": "object",
      "required": ["first_name", "last_name", "schedule_id", "surname"],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "schedule_id": {
          "type": "integer"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "domain.TeacherUpdateDTO": {
      "type": "object",
      "required": ["first_name", "last_name", "surname"],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "domain.TeacherView": {
      "type": "object",
      "required": ["first_name", "id", "last_name", "surname"],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "last_name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "domain.UpdateClassDTO": {
      "type": "object",
      "required": [
        "class_type",
        "day_of_week",
        "even_week",
        "number",
        "subject_id",
        "teacher_id"
      ],
      "properties": {
        "class_type": {
          "$ref": "#/definitions/domain.ClassType"
        },
        "day_of_week": {
          "$ref": "#/definitions/domain.Day"
        },
        "even_week": {
          "type": "boolean"
        },
        "number": {
          "type": "integer"
        },
        "subject_id": {
          "type": "integer"
        },
        "teacher_id": {
          "type": "integer"
        }
      }
    },
    "domain.UpdateSubjectDTO": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "handler.AuthResponse": {
      "type": "object",
      "required": ["access_token", "refresh_token"],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "handler.CreateScheduleRequest": {
      "type": "object",
      "required": ["slug", "title"],
      "properties": {
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "handler.ErrorResponse": {
      "type": "object",
      "required": ["error"],
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "handler.GetMySchedulesResponse": {
      "type": "object",
      "required": ["data", "pagination"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/domain.Schedule"
          }
        },
        "pagination": {
          "$ref": "#/definitions/domain.Pagination"
        }
      }
    },
    "handler.GetSubjectsResponse": {
      "type": "object",
      "required": ["data", "pagination"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/domain.Subject"
          }
        },
        "pagination": {
          "$ref": "#/definitions/domain.Pagination"
        }
      }
    },
    "handler.GetTeahersResponse": {
      "type": "object",
      "required": ["data", "pagination"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/domain.Teacher"
          }
        },
        "pagination": {
          "$ref": "#/definitions/domain.Pagination"
        }
      }
    },
    "handler.IDResponse": {
      "type": "object",
      "required": ["id"],
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "handler.LoginRequest": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "handler.RefreshRequest": {
      "type": "object",
      "required": ["refresh_token"],
      "properties": {
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "handler.RegisterRequest": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "handler.UpdateScheduleRequest": {
      "type": "object",
      "required": ["slug", "title"],
      "properties": {
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Type \"Bearer\" followed by a space and JWT token.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
